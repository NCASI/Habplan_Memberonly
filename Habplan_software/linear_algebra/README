Package linear_algebra
----------------------

This package contains UNOFFICIAL Java versions of the
BLAS (Basic Linear Algebra Subroutines) and the LINPACK
Cholesky decomposition (dpofa, dposl, and dpodi), QR decomposition
(dqrdc and drqsl), and singular value decomposition routines (dsvdc).


WARNING!!!!
-----------

1.) These routines were translated by a user of numerical analysis
routines rather than a developer.  When routines by professional
numerical analysts (such as the people who produce LAPACK) become
available, they should be used.  You might want to
do a search at the www.gamelan.com site for such routines.

2.) I have tried to be careful with the coding and have done some
simple testing (see the CholTest_f77, QRTest_f77, SVDCTest_f77,
CholTest_j, QRTest_j, and SVDCTest_j applications).  
However, it is quite possible that I have introduced
errors into the routines in the course of the translation.  If you
detect any, PLEASE contact me
(Steve Verrill at steve@ws10.fpl.fs.fed.us or 608-231-9375).

3.) The classes/methods that make use of FORTRAN style indexing
have "_f77" suffixes.  In these you will tend to see

   for (i = 1; i <= n; i++)

rather than

   for (i = 0; i < n; i++)

To use the "_f77" routines you will have to declare your vectors
and matrices to be one element larger (e.g., v[101] rather than
v[100], and a[101][101] rather than a[100][100]), and you will have
to fill elements 1 through n rather than elements 0 through n - 1.

The classes/methods that make use of Java/C style indexing
have "_j" suffixes.  In these you will tend to see

   for (i = 0; i < n; i++)

rather than

   for (i = 1; i <= n; i++)

To use the "_j" routines you will have
to fill elements 0 through n - 1 rather than elements 1 through n.

Why would one use the "_f77" material?  If you were translating a
FORTRAN program and didn't want to worry about the effects of changing
index values, you could use the "_f77" routines.  Of course, these
waste a bit of memory.

4.) As of 6/11/97, in addition to the LINPACK translations, the
package also includes Cholesky decomposition routines that I have
written.  These are deprecated and will eventually be removed.  They
use Java style indexing.  These routines are part of
CholTest.class, Cholesky.class, and Triangular.class.

I have tested the Cholesky.class and Triangular.class 
programs with CholTest.  For reasonably scaled, 
well-conditioned problems, they appear to perform satisfactorily
for matrices of order 50.  As I am a statistician
interested in regression problems, this is sufficient
for many of my purposes.  If you need to deal with
larger problems, I STRONGLY encourage you to use
CholTest to investigate whether these routines
will be satisfactory for your purposes.


DISCLAIMER OF WARRANTIES
------------------------

THIS SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND. 
THE AUTHOR/TRANSLATOR DOES NOT WARRANT, GUARANTEE OR MAKE ANY 
REPRESENTATIONS REGARDING THE SOFTWARE OR DOCUMENTATION IN TERMS 
OF THEIR CORRECTNESS, RELIABILITY, CURRENTNESS, OR OTHERWISE.
THE ENTIRE RISK AS TO THE RESULTS AND PERFORMANCE OF THE SOFTWARE 
IS ASSUMED BY YOU. IN NO CASE WILL ANY PARTY INVOLVED WITH THE
CREATION OR DISTRIBUTION OF THE SOFTWARE BE LIABLE FOR ANY DAMAGE 
THAT MAY RESULT FROM THE USE OF THIS SOFTWARE.

Sorry about that.


Documentation
-------------

The documentation generated by javadoc for these routines can be
viewed at 

http://www1.fpl.fs.fed.us/Package-linear_algebra.html


Installation
------------

Given the manner in which the routines are currently written,
you will need to import them (see the beginning of 
CholTest_f77.java).  All of the classes will have to be placed
in subdirectories of a directory in your CLASSPATH.
For the linear algebra classes, this subdirectory will 
have to be called linear_algebra.  Console.class 
will have to be placed in a subdirectory called corejava.

Note that if you install the software in this manner,
then to run, for example, CholTest_f77 you will have to issue the command:

java linear_algebra.CholTest_f77

ALTERNATIVELY, you could remove the package statements
in the *.java files (and the import linear_algebra and
import corejava statements from CholTest_f77.java, QRTest_f77.java,
SVDCTest.java, CholTest_j.java, QRTest_j.java, SVDCTest_j.java, 
and CholTest.java), and compile these files in the same directory
in which you are compiling the java code that calls them.


Console.java
------------

Console.java is software described in Cornell
and Horstmann's Core Java(SunSoft Press/Prentice-Hall).
(I like this book.)
It may be used for non-commerical purposes.  I
only make use of it in the testing routines.  It is not part of
Blas_f77.java, Cholesky_f77.java, QR_f77.java, SVDC_f77.java,
Blas_j.java, Cholesky_j.java, QR_j.java, SVDC_j.java,
Cholesky.java, or Triangular.java.


Support
-------

If you have questions about this software,
or suggestions for improvement,
please contact me:

Steve Verrill
steve@ws10.fpl.fs.fed.us
608-231-9375


Last modified on 6/11/97.

